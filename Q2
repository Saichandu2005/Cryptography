#include <stdio.h>
#include <string.h>

#define ALPHABET_SIZE 26

void encrypt(char *plaintext, char *ciphertext, char *key) {
    int i, index;
    for (i = 0; plaintext[i] != '\0'; i++) {
        if (plaintext[i] >= 'a' && plaintext[i] <= 'z') {
            index = plaintext[i] - 'a';  // Find the position in the alphabet (0-25)
            ciphertext[i] = key[index];  // Map to corresponding character in the key
        } else {
            ciphertext[i] = plaintext[i];  // Copy non-alphabet characters directly
        }
    }
    ciphertext[i] = '\0';  // Null-terminate the ciphertext
}

int main() {
    char plaintext[100], ciphertext[100];
    // Define a simple key for the substitution cipher
    // This key must be a permutation of 'abcdefghijklmnopqrstuvwxyz'
    char key[ALPHABET_SIZE + 1] = "qwertyuiopasdfghjklzxcvbnm";

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    // Remove newline character from the end of the input string, if present
    plaintext[strcspn(plaintext, "\n")] = '\0';

    encrypt(plaintext, ciphertext, key);

    printf("Ciphertext: %s\n", ciphertext);

    return 0;
}
